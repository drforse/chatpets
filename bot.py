# -*- coding: utf-8 -*-
import os
import random
import threading

import telebot
from pymongo import MongoClient

token = os.environ['TELEGRAM_TOKEN']
bot = telebot.TeleBot(token)

client = MongoClient(os.environ['database'])
db = client.chatpets
users = db.users
chats = db.chats
lost = db.lost

if lost.find_one({}) is None:
    lost.insert_one({'amount': 0})

botname = 'Chatpetsbot'
admin_id = 441399484


@bot.message_handler(commands=['growpet'])
def grow(m):
    animal = chats.find_one({'id': m.chat.id})
    if animal is None:
        chats.insert_one(createpet(m.chat.id))
        bot.send_message(m.chat.id,
                         '–ü–æ–∑–¥—Ä–∞–≤–ª—è—é! –í—ã –∑–∞–≤–µ–ª–∏ –ª–æ—à–∞–¥—å! –û —Ç–æ–º, –∫–∞–∫ –∑–∞ –Ω–µ–π —É—Ö–∞–∂–∏–≤–∞—Ç—å, –º–æ–∂–Ω–æ –ø—Ä–æ—á–∏—Ç–∞—Ç—å –≤ /help.')


@bot.message_handler(commands=['start'])
def startt(m):
    if m.from_user.id == m.chat.id:
        bot.send_message(m.chat.id, '–ó–¥—Ä–∞–≤—Å—Ç–≤—É–π! /help –¥–ª—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏.')


@bot.message_handler(commands=['info'])
def info(m):
    text = ''
    if not is_from_admin(m):
        return

    for ids in chats.find({}):
        text += str(ids) + '\n\n'
    bot.send_message(m.chat.id, text)


@bot.message_handler(commands=['top'])
def top(m):
    best_pets = []

    for i in range(1, 11):
        chat = None
        nextt = 0
        for ids in chats.find({}):
            if ids['lvl'] > nextt and ids not in best_pets:
                nextt = ids['lvl']
                chat = ids
        if chat is not None:
            best_pets.append(chat)

    text = '–¢–æ–ø-10 –ª–æ—à–∞–¥–µ–π:\n\n'
    i = 1
    for ids in best_pets:
        text += str(i) + ' –º–µ—Å—Ç–æ: ' + ids['name'] + ' (' + str(ids['lvl']) + ' –ª–≤–ª)\n'
        i += 1
    bot.send_message(m.chat.id, text)


@bot.message_handler(commands=['help'])
def help(m):
    if m.text != "/help@" + botname:
        return

    text = ''
    text += '–ß–∞—Ç–æ–≤—ã–µ –ø–∏—Ç–æ–º—Ü—ã –ø–∏—Ç–∞—é—Ç—Å—è –∞–∫—Ç–∏–≤–Ω–æ—Å—Ç—å—é —é–∑–µ—Ä–æ–≤. –ß–µ–º –±–æ–ª—å—à–µ –≤—ã –æ–±—â–∞–µ—Ç–µ—Å—å –≤ —á–∞—Ç–µ, —Ç–µ–º —Å—á–∞—Å—Ç–ª–∏–≤–µ–µ –±—É–¥–µ—Ç –ø–∏—Ç–æ–º–µ—Ü! '
    text += '–ï—Å–ª–∏ –¥–æ–ª–≥–æ –Ω–µ –æ–±—â–∞—Ç—å—Å—è, –ø–∏—Ç–æ–º–µ—Ü –Ω–∞—á–∏–Ω–∞–µ—Ç –≥–æ–ª–æ–¥–∞—Ç—å –∏ —Ç–µ—Ä—è—Ç—å –∂–∏–∑–Ω–∏. –ù–∞–∑–≤–∞—Ç—å –ø–∏—Ç–æ–º—Ü–∞ –º–æ–∂–Ω–æ –∫–æ–º–∞–Ω–¥–æ–π /name!'
    bot.send_message(m.chat.id, text)


@bot.message_handler(commands=['addexp'])
def addexp(m):
    if is_from_admin(m):
        try:
            chats.update_one({'id': m.chat.id}, {'$inc': {'exp': int(m.text.split(' ')[1])}})
        except:
            pass


@bot.message_handler(commands=['addlvl'])
def addlvl(m):
    if is_from_admin(m):
        try:
            chats.update_one({'id': m.chat.id}, {'$inc': {'lvl': int(m.text.split(' ')[1])}})
        except:
            pass


@bot.message_handler(commands=['petstats'])
def petstats(m):
    animal = chats.find_one({'id': m.chat.id})
    if animal is None:
        return

    text = ''
    text += 'üê¥–ò–º—è: ' + animal['name'] + '\n'
    text += 'üèÖ–£—Ä–æ–≤–µ–Ω—å: ' + str(animal['lvl']) + '\n'
    text += 'üî•–û–ø—ã—Ç: ' + str(animal['exp']) + '/' + str(nextlvl(animal)) + '\n'
    text += '‚ô•–ó–¥–æ—Ä–æ–≤—å–µ: ' + str(animal['hp']) + '/' + str(animal['maxhp']) + '\n'
    text += 'üçî–°—ã—Ç–æ—Å—Ç—å: ' + str(animal['hunger']) + '/' + str(animal['maxhunger']) + '\n'
    text += '–ù—É–∂–Ω–æ —Å—ã—Ç–æ—Å—Ç–∏ –¥–ª—è –ø–æ—Å—Ç–æ—è–Ω–Ω–æ–≥–æ –ø–æ–ª—É—á–µ–Ω–∏—è –æ–ø—ã—Ç–∞: ' + str(int(animal['maxhunger'] * 0.85))
    bot.send_message(m.chat.id, text)


@bot.message_handler(commands=['name'])
def name(m):
    try:
        user = bot.get_chat_member(m.chat.id, m.from_user.id)
        if user.status == 'creator' or user.status == 'administrator' or m.from_user.id == 441399484 or m.from_user.id == m.chat.id:
            name = m.text.split('/name ')[1]
            if chats.find_one({'id': m.chat.id}) is not None:
                chats.update_one({'id': m.chat.id}, {'$set': {'name': name}})
                bot.send_message(m.chat.id, '–í—ã —É—Å–ø–µ—à–Ω–æ —Å–º–µ–Ω–∏–ª–∏ –∏–º—è –ª–æ—à–∞–¥–∏ –Ω–∞ ' + name + '!')
        else:
            bot.send_message(m.chat.id, '–¢–æ–ª—å–∫–æ –∞–¥–º–∏–Ω –º–æ–∂–µ—Ç –¥–µ–ª–∞—Ç—å —ç—Ç–æ!')
    except:
        pass


@bot.message_handler(commands=['allinfo'])
def allinfo(m):
    if is_from_admin(m):
        text = str(chats.find_one({'id': m.chat.id}))
        bot.send_message(441399484, text)


@bot.message_handler(content_types=['text'])
def messages(m):
    animal = chats.find_one({'id': m.chat.id})
    if animal is None:
        return

    if m.from_user.id not in animal['lastminutefeed']:
        chats.update_one({'id': m.chat.id}, {'$push': {'lastminutefeed': m.from_user.id}})


def createpet(id, typee='horse', name='–ë–µ–∑ –∏–º–µ–Ω–∏'):
    return {
        'id': id,
        'type': typee,
        'name': name,
        'lvl': 1,
        'exp': 0,
        'hp': 100,
        'maxhp': 100,
        'lastminutefeed': [],  # –°–ø–∏—Å–æ–∫ —é–∑–µ—Ä–æ–≤, –∫–æ—Ç–æ—Ä—ã–µ –ø—Ä–æ—è–≤–ª—è–ª–∏ –∞–∫—Ç–∏–≤ –≤ –ø–æ—Å–ª–µ–¥–Ω—é—é –º–∏–Ω—É—Ç—É
        'hunger': 100,
        'maxhunger': 100,
        'stats': {}  # –°—Ç–∞—Ç—ã –∏–≥—Ä–æ–∫–æ–≤: –∫—Ç–æ —Å–∫–æ–ª—å–∫–æ –∫–æ—Ä–º–∏—Ç –ª–æ—à–∞–¥—å –∏—Ç–¥
    }


def medit(message_text, chat_id, message_id, reply_markup=None, parse_mode=None):
    return bot.edit_message_text(chat_id=chat_id, message_id=message_id, text=message_text, reply_markup=reply_markup,
                                 parse_mode=parse_mode)


def nextlvl(pet):
    return pet['lvl'] * (4 + pet['lvl'] * 100)


def check1():
    for pet in chats.find({}):
        hunger = pet['hunger']
        maxhunger = pet['maxhunger']
        exp = pet['exp']
        lvl = pet['lvl']
        lastminutefeed = pet['lastminutefeed']

        # –µ—Å–ª–∏ –∫—Ç–æ-—Ç–æ –ø–∏—Å–∞–ª –≤ —á–∞—Ç, –ø—Ä–∏–±–∞–≤–∏—Ç—å –∫–æ–ª-–≤–æ –µ–¥—ã —Ä–∞–≤–Ω–æ–µ –∫–æ–ª-–≤–æ –ø–æ–∫–æ—Ä–º–∏–≤—à–∏—Ö –≤ —ç—Ç—É –º–∏–Ω—É—Ç—É * 2
        if len(lastminutefeed) > 0:
            hunger += len(lastminutefeed) * 2
            lastminutefeed = []
            if hunger > maxhunger:
                hunger = maxhunger

        # –µ—Å–ª–∏ –ª–æ—à–∞–¥—å –Ω–∞–∫–æ—Ä–º–ª–µ–Ω–∞ –Ω–∞ 85% –∏ –≤—ã—à–µ, –ø—Ä–∏–±–∞–≤–∏—Ç—å –æ–ø—ã—Ç–∞
        if hunger / maxhunger * 100 >= 85:
            exp += int(lvl * (2 + (random.randint(-100, 100) / 100)))

        if exp >= nextlvl(pet):
            lvl += 1
            maxhunger += 15
            try:
                bot.send_message(pet['id'], '–£—Ä–æ–≤–µ–Ω—å –≤–∞—à–µ–π –ª–æ—à–∞–¥–∏ –ø–æ–≤—ã—à–µ–Ω! –ú–∞–∫—Å–∏–º–∞–ª—å–Ω—ã–π –∑–∞–ø–∞—Å —Å—ã—Ç–æ—Å—Ç–∏ —É–≤–µ–ª–∏—á–µ–Ω –Ω–∞ 15!')
            except:
                pass

        commit = {'hunger': hunger, 'maxhunger': maxhunger, 'exp': exp, 'lvl': lvl, 'lastminutefeed': lastminutefeed}
        chats.update_one({'id': pet['id']}, {'$set': commit})

    t = threading.Timer(60, check1)
    t.start()


def check10():
    t = threading.Timer(1800, check10)
    t.start()
    for pet in chats.find({}):
        hunger = pet['hunger'] - random.randint(2, 6)
        maxhunger = pet['maxhunger']  # const
        hp = pet['hp']
        maxhp = pet['maxhp']  # const

        if hunger <= 0:
            hunger = 0
            try:
                bot.send_message(pet['id'], '–í–∞—à–∞ –ª–æ—à–∞–¥—å –°–ò–õ–¨–ù–û –≥–æ–ª–æ–¥–∞–µ—Ç! –û—Å—Ç–∞–ª–æ—Å—å ' + str(
                    hunger) + ' —Å—ã—Ç–æ—Å—Ç–∏! –°–†–û–ß–ù–û –Ω—É–∂–µ–Ω –∞–∫—Ç–∏–≤ –≤ —á–∞—Ç!')
            except:
                pass
            hp -= random.randint(9, 15)

        elif hunger / maxhunger * 100 <= 30:
            try:
                bot.send_message(pet['id'], '–í–∞—à–∞ –ª–æ—à–∞–¥—å –≥–æ–ª–æ–¥–∞–µ—Ç! –û—Å—Ç–∞–ª–æ—Å—å –≤—Å–µ–≥–æ ' + str(
                    hunger) + ' —Å—ã—Ç–æ—Å—Ç–∏! –°—Ä–æ—á–Ω–æ –Ω—É–∂–µ–Ω –∞–∫—Ç–∏–≤ –≤ —á–∞—Ç!')
            except:
                pass
            hp -= random.randint(9, 15)

        elif hunger / maxhunger * 100 >= 75 and hp < maxhp:
            hp += random.randint(3, 9)
            if hp > maxhp:
                hp = maxhp

        commit = {'hunger': hunger, 'hp': hp}
        chats.update_one({'id': pet['id']}, {'$set': commit})

        if hp <= 0:
            total = lost.find_one({})['amount']
            total += 1
            lost.update_one({}, {'$inc': {'amount': 1}})
            chats.remove({'id': pet['id']})
        try:
            bot.send_message(pet['id'],
                             '–í–∞—à–µ–π –ª–æ—à–∞–¥–∏ –ø–ª–æ—Ö–æ –≤ –≤–∞—à–µ–º —á–∞—Ç–µ, –µ–π –Ω–µ —Ö–≤–∞—Ç–∞–µ—Ç –ø–∏—Ç–∞–Ω–∏—è. –ü–æ—ç—Ç–æ–º—É —è –∑–∞–±–∏—Ä–∞—é –µ—ë, —á—Ç–æ–±—ã –Ω–µ –æ—Ç–∫–∏–Ω—É–ª–∞ –∫–æ–ø—ã—Ç–∞.\n' +
                             '–ö–æ–ª–∏—á–µ—Å—Ç–≤–æ –ª–æ—à–∞–¥–µ–π, –∫–æ—Ç–æ—Ä—ã—Ö –º–Ω–µ –ø—Ä–∏—à–ª–æ—Å—å –∑–∞–±—Ä–∞—Ç—å (–≤–æ –≤—Å–µ—Ö —á–∞—Ç–∞—Ö): ' + str(total))
        except:
            pass


def is_from_admin(m):
    return m.from_user.id == admin_id


check1()
check10()

print('7777')
bot.polling(none_stop=True, timeout=600)
